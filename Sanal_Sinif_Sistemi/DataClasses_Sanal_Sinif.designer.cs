#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sanal_Sinif_Sistemi
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="db_Sinav_Analiz")]
	public partial class DataClasses_Sanal_SinifDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDersler(Dersler instance);
    partial void UpdateDersler(Dersler instance);
    partial void DeleteDersler(Dersler instance);
    partial void InsertYetki(Yetki instance);
    partial void UpdateYetki(Yetki instance);
    partial void DeleteYetki(Yetki instance);
    partial void InsertKonu(Konu instance);
    partial void UpdateKonu(Konu instance);
    partial void DeleteKonu(Konu instance);
    partial void InsertKullanici(Kullanici instance);
    partial void UpdateKullanici(Kullanici instance);
    partial void DeleteKullanici(Kullanici instance);
    partial void InsertSoru(Soru instance);
    partial void UpdateSoru(Soru instance);
    partial void DeleteSoru(Soru instance);
    partial void InsertTest(Test instance);
    partial void UpdateTest(Test instance);
    partial void DeleteTest(Test instance);
    partial void InsertTest_Detay(Test_Detay instance);
    partial void UpdateTest_Detay(Test_Detay instance);
    partial void DeleteTest_Detay(Test_Detay instance);
    #endregion
		
		public DataClasses_Sanal_SinifDataContext() : 
				base(global::Sanal_Sinif_Sistemi.Properties.Settings.Default.db_Sinav_AnalizConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses_Sanal_SinifDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses_Sanal_SinifDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses_Sanal_SinifDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses_Sanal_SinifDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Dersler> Derslers
		{
			get
			{
				return this.GetTable<Dersler>();
			}
		}
		
		public System.Data.Linq.Table<Yetki> Yetkis
		{
			get
			{
				return this.GetTable<Yetki>();
			}
		}
		
		public System.Data.Linq.Table<Konu> Konus
		{
			get
			{
				return this.GetTable<Konu>();
			}
		}
		
		public System.Data.Linq.Table<Kullanici> Kullanicis
		{
			get
			{
				return this.GetTable<Kullanici>();
			}
		}
		
		public System.Data.Linq.Table<Soru> Sorus
		{
			get
			{
				return this.GetTable<Soru>();
			}
		}
		
		public System.Data.Linq.Table<Test> Tests
		{
			get
			{
				return this.GetTable<Test>();
			}
		}
		
		public System.Data.Linq.Table<Test_Detay> Test_Detays
		{
			get
			{
				return this.GetTable<Test_Detay>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Dersler")]
	public partial class Dersler : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _Ders_ID;
		
		private string _Ders_Adi;
		
		private System.Nullable<bool> _Aktiflik_Durumu;
		
		private string _Aciklama;
		
		private EntitySet<Konu> _Konus;
		
		private EntitySet<Soru> _Sorus;
		
		private EntitySet<Test> _Tests;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDers_IDChanging(short value);
    partial void OnDers_IDChanged();
    partial void OnDers_AdiChanging(string value);
    partial void OnDers_AdiChanged();
    partial void OnAktiflik_DurumuChanging(System.Nullable<bool> value);
    partial void OnAktiflik_DurumuChanged();
    partial void OnAciklamaChanging(string value);
    partial void OnAciklamaChanged();
    #endregion
		
		public Dersler()
		{
			this._Konus = new EntitySet<Konu>(new Action<Konu>(this.attach_Konus), new Action<Konu>(this.detach_Konus));
			this._Sorus = new EntitySet<Soru>(new Action<Soru>(this.attach_Sorus), new Action<Soru>(this.detach_Sorus));
			this._Tests = new EntitySet<Test>(new Action<Test>(this.attach_Tests), new Action<Test>(this.detach_Tests));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ders_ID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short Ders_ID
		{
			get
			{
				return this._Ders_ID;
			}
			set
			{
				if ((this._Ders_ID != value))
				{
					this.OnDers_IDChanging(value);
					this.SendPropertyChanging();
					this._Ders_ID = value;
					this.SendPropertyChanged("Ders_ID");
					this.OnDers_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ders_Adi", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Ders_Adi
		{
			get
			{
				return this._Ders_Adi;
			}
			set
			{
				if ((this._Ders_Adi != value))
				{
					this.OnDers_AdiChanging(value);
					this.SendPropertyChanging();
					this._Ders_Adi = value;
					this.SendPropertyChanged("Ders_Adi");
					this.OnDers_AdiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Aktiflik_Durumu", DbType="Bit")]
		public System.Nullable<bool> Aktiflik_Durumu
		{
			get
			{
				return this._Aktiflik_Durumu;
			}
			set
			{
				if ((this._Aktiflik_Durumu != value))
				{
					this.OnAktiflik_DurumuChanging(value);
					this.SendPropertyChanging();
					this._Aktiflik_Durumu = value;
					this.SendPropertyChanged("Aktiflik_Durumu");
					this.OnAktiflik_DurumuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Aciklama", DbType="NVarChar(250)")]
		public string Aciklama
		{
			get
			{
				return this._Aciklama;
			}
			set
			{
				if ((this._Aciklama != value))
				{
					this.OnAciklamaChanging(value);
					this.SendPropertyChanging();
					this._Aciklama = value;
					this.SendPropertyChanged("Aciklama");
					this.OnAciklamaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dersler_Konu", Storage="_Konus", ThisKey="Ders_ID", OtherKey="Ders_ID")]
		public EntitySet<Konu> Konus
		{
			get
			{
				return this._Konus;
			}
			set
			{
				this._Konus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dersler_Soru", Storage="_Sorus", ThisKey="Ders_ID", OtherKey="Ders_ID")]
		public EntitySet<Soru> Sorus
		{
			get
			{
				return this._Sorus;
			}
			set
			{
				this._Sorus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dersler_Test", Storage="_Tests", ThisKey="Ders_ID", OtherKey="Ders_ID")]
		public EntitySet<Test> Tests
		{
			get
			{
				return this._Tests;
			}
			set
			{
				this._Tests.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Konus(Konu entity)
		{
			this.SendPropertyChanging();
			entity.Dersler = this;
		}
		
		private void detach_Konus(Konu entity)
		{
			this.SendPropertyChanging();
			entity.Dersler = null;
		}
		
		private void attach_Sorus(Soru entity)
		{
			this.SendPropertyChanging();
			entity.Dersler = this;
		}
		
		private void detach_Sorus(Soru entity)
		{
			this.SendPropertyChanging();
			entity.Dersler = null;
		}
		
		private void attach_Tests(Test entity)
		{
			this.SendPropertyChanging();
			entity.Dersler = this;
		}
		
		private void detach_Tests(Test entity)
		{
			this.SendPropertyChanging();
			entity.Dersler = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Yetki")]
	public partial class Yetki : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _Yetki_ID;
		
		private string _Yetki_Adi;
		
		private string _Aciklama;
		
		private EntitySet<Kullanici> _Kullanicis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnYetki_IDChanging(short value);
    partial void OnYetki_IDChanged();
    partial void OnYetki_AdiChanging(string value);
    partial void OnYetki_AdiChanged();
    partial void OnAciklamaChanging(string value);
    partial void OnAciklamaChanged();
    #endregion
		
		public Yetki()
		{
			this._Kullanicis = new EntitySet<Kullanici>(new Action<Kullanici>(this.attach_Kullanicis), new Action<Kullanici>(this.detach_Kullanicis));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Yetki_ID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short Yetki_ID
		{
			get
			{
				return this._Yetki_ID;
			}
			set
			{
				if ((this._Yetki_ID != value))
				{
					this.OnYetki_IDChanging(value);
					this.SendPropertyChanging();
					this._Yetki_ID = value;
					this.SendPropertyChanged("Yetki_ID");
					this.OnYetki_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Yetki_Adi", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Yetki_Adi
		{
			get
			{
				return this._Yetki_Adi;
			}
			set
			{
				if ((this._Yetki_Adi != value))
				{
					this.OnYetki_AdiChanging(value);
					this.SendPropertyChanging();
					this._Yetki_Adi = value;
					this.SendPropertyChanged("Yetki_Adi");
					this.OnYetki_AdiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Aciklama", DbType="NVarChar(250)")]
		public string Aciklama
		{
			get
			{
				return this._Aciklama;
			}
			set
			{
				if ((this._Aciklama != value))
				{
					this.OnAciklamaChanging(value);
					this.SendPropertyChanging();
					this._Aciklama = value;
					this.SendPropertyChanged("Aciklama");
					this.OnAciklamaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Yetki_Kullanici", Storage="_Kullanicis", ThisKey="Yetki_ID", OtherKey="Yetki_ID")]
		public EntitySet<Kullanici> Kullanicis
		{
			get
			{
				return this._Kullanicis;
			}
			set
			{
				this._Kullanicis.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Kullanicis(Kullanici entity)
		{
			this.SendPropertyChanging();
			entity.Yetki = this;
		}
		
		private void detach_Kullanicis(Kullanici entity)
		{
			this.SendPropertyChanging();
			entity.Yetki = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Konu")]
	public partial class Konu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _Konu_ID;
		
		private short _Ders_ID;
		
		private string _Konu_Adi;
		
		private System.Nullable<bool> _Aktiflik_Durumu;
		
		private string _Aciklama;
		
		private EntitySet<Soru> _Sorus;
		
		private EntityRef<Dersler> _Dersler;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKonu_IDChanging(short value);
    partial void OnKonu_IDChanged();
    partial void OnDers_IDChanging(short value);
    partial void OnDers_IDChanged();
    partial void OnKonu_AdiChanging(string value);
    partial void OnKonu_AdiChanged();
    partial void OnAktiflik_DurumuChanging(System.Nullable<bool> value);
    partial void OnAktiflik_DurumuChanged();
    partial void OnAciklamaChanging(string value);
    partial void OnAciklamaChanged();
    #endregion
		
		public Konu()
		{
			this._Sorus = new EntitySet<Soru>(new Action<Soru>(this.attach_Sorus), new Action<Soru>(this.detach_Sorus));
			this._Dersler = default(EntityRef<Dersler>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Konu_ID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short Konu_ID
		{
			get
			{
				return this._Konu_ID;
			}
			set
			{
				if ((this._Konu_ID != value))
				{
					this.OnKonu_IDChanging(value);
					this.SendPropertyChanging();
					this._Konu_ID = value;
					this.SendPropertyChanged("Konu_ID");
					this.OnKonu_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ders_ID", DbType="SmallInt NOT NULL")]
		public short Ders_ID
		{
			get
			{
				return this._Ders_ID;
			}
			set
			{
				if ((this._Ders_ID != value))
				{
					if (this._Dersler.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDers_IDChanging(value);
					this.SendPropertyChanging();
					this._Ders_ID = value;
					this.SendPropertyChanged("Ders_ID");
					this.OnDers_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Konu_Adi", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Konu_Adi
		{
			get
			{
				return this._Konu_Adi;
			}
			set
			{
				if ((this._Konu_Adi != value))
				{
					this.OnKonu_AdiChanging(value);
					this.SendPropertyChanging();
					this._Konu_Adi = value;
					this.SendPropertyChanged("Konu_Adi");
					this.OnKonu_AdiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Aktiflik_Durumu", DbType="Bit")]
		public System.Nullable<bool> Aktiflik_Durumu
		{
			get
			{
				return this._Aktiflik_Durumu;
			}
			set
			{
				if ((this._Aktiflik_Durumu != value))
				{
					this.OnAktiflik_DurumuChanging(value);
					this.SendPropertyChanging();
					this._Aktiflik_Durumu = value;
					this.SendPropertyChanged("Aktiflik_Durumu");
					this.OnAktiflik_DurumuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Aciklama", DbType="NVarChar(250)")]
		public string Aciklama
		{
			get
			{
				return this._Aciklama;
			}
			set
			{
				if ((this._Aciklama != value))
				{
					this.OnAciklamaChanging(value);
					this.SendPropertyChanging();
					this._Aciklama = value;
					this.SendPropertyChanged("Aciklama");
					this.OnAciklamaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Konu_Soru", Storage="_Sorus", ThisKey="Konu_ID", OtherKey="Konu_ID")]
		public EntitySet<Soru> Sorus
		{
			get
			{
				return this._Sorus;
			}
			set
			{
				this._Sorus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dersler_Konu", Storage="_Dersler", ThisKey="Ders_ID", OtherKey="Ders_ID", IsForeignKey=true)]
		public Dersler Dersler
		{
			get
			{
				return this._Dersler.Entity;
			}
			set
			{
				Dersler previousValue = this._Dersler.Entity;
				if (((previousValue != value) 
							|| (this._Dersler.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Dersler.Entity = null;
						previousValue.Konus.Remove(this);
					}
					this._Dersler.Entity = value;
					if ((value != null))
					{
						value.Konus.Add(this);
						this._Ders_ID = value.Ders_ID;
					}
					else
					{
						this._Ders_ID = default(short);
					}
					this.SendPropertyChanged("Dersler");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sorus(Soru entity)
		{
			this.SendPropertyChanging();
			entity.Konu = this;
		}
		
		private void detach_Sorus(Soru entity)
		{
			this.SendPropertyChanging();
			entity.Konu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Kullanici")]
	public partial class Kullanici : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _Kullanici_ID;
		
		private short _Yetki_ID;
		
		private string _Kullanici_Adi;
		
		private string _Kullanici_Sifre;
		
		private string _TC_Kimlik_No;
		
		private string _Adi;
		
		private string _Soyadi;
		
		private System.Nullable<bool> _Aktiflik_Durumu;
		
		private string _Aciklama;
		
		private EntitySet<Test> _Tests;
		
		private EntityRef<Yetki> _Yetki;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKullanici_IDChanging(short value);
    partial void OnKullanici_IDChanged();
    partial void OnYetki_IDChanging(short value);
    partial void OnYetki_IDChanged();
    partial void OnKullanici_AdiChanging(string value);
    partial void OnKullanici_AdiChanged();
    partial void OnKullanici_SifreChanging(string value);
    partial void OnKullanici_SifreChanged();
    partial void OnTC_Kimlik_NoChanging(string value);
    partial void OnTC_Kimlik_NoChanged();
    partial void OnAdiChanging(string value);
    partial void OnAdiChanged();
    partial void OnSoyadiChanging(string value);
    partial void OnSoyadiChanged();
    partial void OnAktiflik_DurumuChanging(System.Nullable<bool> value);
    partial void OnAktiflik_DurumuChanged();
    partial void OnAciklamaChanging(string value);
    partial void OnAciklamaChanged();
    #endregion
		
		public Kullanici()
		{
			this._Tests = new EntitySet<Test>(new Action<Test>(this.attach_Tests), new Action<Test>(this.detach_Tests));
			this._Yetki = default(EntityRef<Yetki>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kullanici_ID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short Kullanici_ID
		{
			get
			{
				return this._Kullanici_ID;
			}
			set
			{
				if ((this._Kullanici_ID != value))
				{
					this.OnKullanici_IDChanging(value);
					this.SendPropertyChanging();
					this._Kullanici_ID = value;
					this.SendPropertyChanged("Kullanici_ID");
					this.OnKullanici_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Yetki_ID", DbType="SmallInt NOT NULL")]
		public short Yetki_ID
		{
			get
			{
				return this._Yetki_ID;
			}
			set
			{
				if ((this._Yetki_ID != value))
				{
					if (this._Yetki.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnYetki_IDChanging(value);
					this.SendPropertyChanging();
					this._Yetki_ID = value;
					this.SendPropertyChanged("Yetki_ID");
					this.OnYetki_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kullanici_Adi", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Kullanici_Adi
		{
			get
			{
				return this._Kullanici_Adi;
			}
			set
			{
				if ((this._Kullanici_Adi != value))
				{
					this.OnKullanici_AdiChanging(value);
					this.SendPropertyChanging();
					this._Kullanici_Adi = value;
					this.SendPropertyChanged("Kullanici_Adi");
					this.OnKullanici_AdiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kullanici_Sifre", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Kullanici_Sifre
		{
			get
			{
				return this._Kullanici_Sifre;
			}
			set
			{
				if ((this._Kullanici_Sifre != value))
				{
					this.OnKullanici_SifreChanging(value);
					this.SendPropertyChanging();
					this._Kullanici_Sifre = value;
					this.SendPropertyChanged("Kullanici_Sifre");
					this.OnKullanici_SifreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TC_Kimlik_No", DbType="NVarChar(11)")]
		public string TC_Kimlik_No
		{
			get
			{
				return this._TC_Kimlik_No;
			}
			set
			{
				if ((this._TC_Kimlik_No != value))
				{
					this.OnTC_Kimlik_NoChanging(value);
					this.SendPropertyChanging();
					this._TC_Kimlik_No = value;
					this.SendPropertyChanged("TC_Kimlik_No");
					this.OnTC_Kimlik_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adi", DbType="NVarChar(50)")]
		public string Adi
		{
			get
			{
				return this._Adi;
			}
			set
			{
				if ((this._Adi != value))
				{
					this.OnAdiChanging(value);
					this.SendPropertyChanging();
					this._Adi = value;
					this.SendPropertyChanged("Adi");
					this.OnAdiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Soyadi", DbType="NVarChar(50)")]
		public string Soyadi
		{
			get
			{
				return this._Soyadi;
			}
			set
			{
				if ((this._Soyadi != value))
				{
					this.OnSoyadiChanging(value);
					this.SendPropertyChanging();
					this._Soyadi = value;
					this.SendPropertyChanged("Soyadi");
					this.OnSoyadiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Aktiflik_Durumu", DbType="Bit")]
		public System.Nullable<bool> Aktiflik_Durumu
		{
			get
			{
				return this._Aktiflik_Durumu;
			}
			set
			{
				if ((this._Aktiflik_Durumu != value))
				{
					this.OnAktiflik_DurumuChanging(value);
					this.SendPropertyChanging();
					this._Aktiflik_Durumu = value;
					this.SendPropertyChanged("Aktiflik_Durumu");
					this.OnAktiflik_DurumuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Aciklama", DbType="NVarChar(250)")]
		public string Aciklama
		{
			get
			{
				return this._Aciklama;
			}
			set
			{
				if ((this._Aciklama != value))
				{
					this.OnAciklamaChanging(value);
					this.SendPropertyChanging();
					this._Aciklama = value;
					this.SendPropertyChanged("Aciklama");
					this.OnAciklamaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kullanici_Test", Storage="_Tests", ThisKey="Kullanici_ID", OtherKey="Kullanici_ID")]
		public EntitySet<Test> Tests
		{
			get
			{
				return this._Tests;
			}
			set
			{
				this._Tests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Yetki_Kullanici", Storage="_Yetki", ThisKey="Yetki_ID", OtherKey="Yetki_ID", IsForeignKey=true)]
		public Yetki Yetki
		{
			get
			{
				return this._Yetki.Entity;
			}
			set
			{
				Yetki previousValue = this._Yetki.Entity;
				if (((previousValue != value) 
							|| (this._Yetki.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Yetki.Entity = null;
						previousValue.Kullanicis.Remove(this);
					}
					this._Yetki.Entity = value;
					if ((value != null))
					{
						value.Kullanicis.Add(this);
						this._Yetki_ID = value.Yetki_ID;
					}
					else
					{
						this._Yetki_ID = default(short);
					}
					this.SendPropertyChanged("Yetki");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tests(Test entity)
		{
			this.SendPropertyChanging();
			entity.Kullanici = this;
		}
		
		private void detach_Tests(Test entity)
		{
			this.SendPropertyChanging();
			entity.Kullanici = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Soru")]
	public partial class Soru : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _Soru_ID;
		
		private short _Ders_ID;
		
		private short _Konu_ID;
		
		private string _Soru_Icerik;
		
		private string _Cevap_Metin_A;
		
		private string _Cevap_Metin_B;
		
		private string _Cevap_Metin_C;
		
		private string _Cevap_Metin_D;
		
		private string _Soru_Img;
		
		private string _Cevap_Img_A;
		
		private string _Cevap_Img_B;
		
		private string _Cevap_Img_C;
		
		private string _Cevap_Img_D;
		
		private short _Dogru_Cevap;
		
		private System.Nullable<System.DateTime> _Soru_Tarihi;
		
		private System.Nullable<bool> _Aktiflik_Durumu;
		
		private string _Aciklama;
		
		private EntitySet<Test_Detay> _Test_Detays;
		
		private EntityRef<Dersler> _Dersler;
		
		private EntityRef<Konu> _Konu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSoru_IDChanging(short value);
    partial void OnSoru_IDChanged();
    partial void OnDers_IDChanging(short value);
    partial void OnDers_IDChanged();
    partial void OnKonu_IDChanging(short value);
    partial void OnKonu_IDChanged();
    partial void OnSoru_IcerikChanging(string value);
    partial void OnSoru_IcerikChanged();
    partial void OnCevap_Metin_AChanging(string value);
    partial void OnCevap_Metin_AChanged();
    partial void OnCevap_Metin_BChanging(string value);
    partial void OnCevap_Metin_BChanged();
    partial void OnCevap_Metin_CChanging(string value);
    partial void OnCevap_Metin_CChanged();
    partial void OnCevap_Metin_DChanging(string value);
    partial void OnCevap_Metin_DChanged();
    partial void OnSoru_ImgChanging(string value);
    partial void OnSoru_ImgChanged();
    partial void OnCevap_Img_AChanging(string value);
    partial void OnCevap_Img_AChanged();
    partial void OnCevap_Img_BChanging(string value);
    partial void OnCevap_Img_BChanged();
    partial void OnCevap_Img_CChanging(string value);
    partial void OnCevap_Img_CChanged();
    partial void OnCevap_Img_DChanging(string value);
    partial void OnCevap_Img_DChanged();
    partial void OnDogru_CevapChanging(short value);
    partial void OnDogru_CevapChanged();
    partial void OnSoru_TarihiChanging(System.Nullable<System.DateTime> value);
    partial void OnSoru_TarihiChanged();
    partial void OnAktiflik_DurumuChanging(System.Nullable<bool> value);
    partial void OnAktiflik_DurumuChanged();
    partial void OnAciklamaChanging(string value);
    partial void OnAciklamaChanged();
    #endregion
		
		public Soru()
		{
			this._Test_Detays = new EntitySet<Test_Detay>(new Action<Test_Detay>(this.attach_Test_Detays), new Action<Test_Detay>(this.detach_Test_Detays));
			this._Dersler = default(EntityRef<Dersler>);
			this._Konu = default(EntityRef<Konu>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Soru_ID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short Soru_ID
		{
			get
			{
				return this._Soru_ID;
			}
			set
			{
				if ((this._Soru_ID != value))
				{
					this.OnSoru_IDChanging(value);
					this.SendPropertyChanging();
					this._Soru_ID = value;
					this.SendPropertyChanged("Soru_ID");
					this.OnSoru_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ders_ID", DbType="SmallInt NOT NULL")]
		public short Ders_ID
		{
			get
			{
				return this._Ders_ID;
			}
			set
			{
				if ((this._Ders_ID != value))
				{
					if (this._Dersler.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDers_IDChanging(value);
					this.SendPropertyChanging();
					this._Ders_ID = value;
					this.SendPropertyChanged("Ders_ID");
					this.OnDers_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Konu_ID", DbType="SmallInt NOT NULL")]
		public short Konu_ID
		{
			get
			{
				return this._Konu_ID;
			}
			set
			{
				if ((this._Konu_ID != value))
				{
					if (this._Konu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKonu_IDChanging(value);
					this.SendPropertyChanging();
					this._Konu_ID = value;
					this.SendPropertyChanged("Konu_ID");
					this.OnKonu_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Soru_Icerik", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Soru_Icerik
		{
			get
			{
				return this._Soru_Icerik;
			}
			set
			{
				if ((this._Soru_Icerik != value))
				{
					this.OnSoru_IcerikChanging(value);
					this.SendPropertyChanging();
					this._Soru_Icerik = value;
					this.SendPropertyChanged("Soru_Icerik");
					this.OnSoru_IcerikChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cevap_Metin_A", DbType="NVarChar(MAX)")]
		public string Cevap_Metin_A
		{
			get
			{
				return this._Cevap_Metin_A;
			}
			set
			{
				if ((this._Cevap_Metin_A != value))
				{
					this.OnCevap_Metin_AChanging(value);
					this.SendPropertyChanging();
					this._Cevap_Metin_A = value;
					this.SendPropertyChanged("Cevap_Metin_A");
					this.OnCevap_Metin_AChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cevap_Metin_B", DbType="NVarChar(MAX)")]
		public string Cevap_Metin_B
		{
			get
			{
				return this._Cevap_Metin_B;
			}
			set
			{
				if ((this._Cevap_Metin_B != value))
				{
					this.OnCevap_Metin_BChanging(value);
					this.SendPropertyChanging();
					this._Cevap_Metin_B = value;
					this.SendPropertyChanged("Cevap_Metin_B");
					this.OnCevap_Metin_BChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cevap_Metin_C", DbType="NVarChar(MAX)")]
		public string Cevap_Metin_C
		{
			get
			{
				return this._Cevap_Metin_C;
			}
			set
			{
				if ((this._Cevap_Metin_C != value))
				{
					this.OnCevap_Metin_CChanging(value);
					this.SendPropertyChanging();
					this._Cevap_Metin_C = value;
					this.SendPropertyChanged("Cevap_Metin_C");
					this.OnCevap_Metin_CChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cevap_Metin_D", DbType="NVarChar(MAX)")]
		public string Cevap_Metin_D
		{
			get
			{
				return this._Cevap_Metin_D;
			}
			set
			{
				if ((this._Cevap_Metin_D != value))
				{
					this.OnCevap_Metin_DChanging(value);
					this.SendPropertyChanging();
					this._Cevap_Metin_D = value;
					this.SendPropertyChanged("Cevap_Metin_D");
					this.OnCevap_Metin_DChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Soru_Img", DbType="NVarChar(MAX)")]
		public string Soru_Img
		{
			get
			{
				return this._Soru_Img;
			}
			set
			{
				if ((this._Soru_Img != value))
				{
					this.OnSoru_ImgChanging(value);
					this.SendPropertyChanging();
					this._Soru_Img = value;
					this.SendPropertyChanged("Soru_Img");
					this.OnSoru_ImgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cevap_Img_A", DbType="NVarChar(MAX)")]
		public string Cevap_Img_A
		{
			get
			{
				return this._Cevap_Img_A;
			}
			set
			{
				if ((this._Cevap_Img_A != value))
				{
					this.OnCevap_Img_AChanging(value);
					this.SendPropertyChanging();
					this._Cevap_Img_A = value;
					this.SendPropertyChanged("Cevap_Img_A");
					this.OnCevap_Img_AChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cevap_Img_B", DbType="NVarChar(MAX)")]
		public string Cevap_Img_B
		{
			get
			{
				return this._Cevap_Img_B;
			}
			set
			{
				if ((this._Cevap_Img_B != value))
				{
					this.OnCevap_Img_BChanging(value);
					this.SendPropertyChanging();
					this._Cevap_Img_B = value;
					this.SendPropertyChanged("Cevap_Img_B");
					this.OnCevap_Img_BChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cevap_Img_C", DbType="NVarChar(MAX)")]
		public string Cevap_Img_C
		{
			get
			{
				return this._Cevap_Img_C;
			}
			set
			{
				if ((this._Cevap_Img_C != value))
				{
					this.OnCevap_Img_CChanging(value);
					this.SendPropertyChanging();
					this._Cevap_Img_C = value;
					this.SendPropertyChanged("Cevap_Img_C");
					this.OnCevap_Img_CChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cevap_Img_D", DbType="NVarChar(MAX)")]
		public string Cevap_Img_D
		{
			get
			{
				return this._Cevap_Img_D;
			}
			set
			{
				if ((this._Cevap_Img_D != value))
				{
					this.OnCevap_Img_DChanging(value);
					this.SendPropertyChanging();
					this._Cevap_Img_D = value;
					this.SendPropertyChanged("Cevap_Img_D");
					this.OnCevap_Img_DChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dogru_Cevap", DbType="SmallInt NOT NULL")]
		public short Dogru_Cevap
		{
			get
			{
				return this._Dogru_Cevap;
			}
			set
			{
				if ((this._Dogru_Cevap != value))
				{
					this.OnDogru_CevapChanging(value);
					this.SendPropertyChanging();
					this._Dogru_Cevap = value;
					this.SendPropertyChanged("Dogru_Cevap");
					this.OnDogru_CevapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Soru_Tarihi", DbType="DateTime", IsDbGenerated=true)]
		public System.Nullable<System.DateTime> Soru_Tarihi
		{
			get
			{
				return this._Soru_Tarihi;
			}
			set
			{
				if ((this._Soru_Tarihi != value))
				{
					this.OnSoru_TarihiChanging(value);
					this.SendPropertyChanging();
					this._Soru_Tarihi = value;
					this.SendPropertyChanged("Soru_Tarihi");
					this.OnSoru_TarihiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Aktiflik_Durumu", DbType="Bit")]
		public System.Nullable<bool> Aktiflik_Durumu
		{
			get
			{
				return this._Aktiflik_Durumu;
			}
			set
			{
				if ((this._Aktiflik_Durumu != value))
				{
					this.OnAktiflik_DurumuChanging(value);
					this.SendPropertyChanging();
					this._Aktiflik_Durumu = value;
					this.SendPropertyChanged("Aktiflik_Durumu");
					this.OnAktiflik_DurumuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Aciklama", DbType="NVarChar(250)")]
		public string Aciklama
		{
			get
			{
				return this._Aciklama;
			}
			set
			{
				if ((this._Aciklama != value))
				{
					this.OnAciklamaChanging(value);
					this.SendPropertyChanging();
					this._Aciklama = value;
					this.SendPropertyChanged("Aciklama");
					this.OnAciklamaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Soru_Test_Detay", Storage="_Test_Detays", ThisKey="Soru_ID", OtherKey="Soru_ID")]
		public EntitySet<Test_Detay> Test_Detays
		{
			get
			{
				return this._Test_Detays;
			}
			set
			{
				this._Test_Detays.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dersler_Soru", Storage="_Dersler", ThisKey="Ders_ID", OtherKey="Ders_ID", IsForeignKey=true)]
		public Dersler Dersler
		{
			get
			{
				return this._Dersler.Entity;
			}
			set
			{
				Dersler previousValue = this._Dersler.Entity;
				if (((previousValue != value) 
							|| (this._Dersler.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Dersler.Entity = null;
						previousValue.Sorus.Remove(this);
					}
					this._Dersler.Entity = value;
					if ((value != null))
					{
						value.Sorus.Add(this);
						this._Ders_ID = value.Ders_ID;
					}
					else
					{
						this._Ders_ID = default(short);
					}
					this.SendPropertyChanged("Dersler");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Konu_Soru", Storage="_Konu", ThisKey="Konu_ID", OtherKey="Konu_ID", IsForeignKey=true)]
		public Konu Konu
		{
			get
			{
				return this._Konu.Entity;
			}
			set
			{
				Konu previousValue = this._Konu.Entity;
				if (((previousValue != value) 
							|| (this._Konu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Konu.Entity = null;
						previousValue.Sorus.Remove(this);
					}
					this._Konu.Entity = value;
					if ((value != null))
					{
						value.Sorus.Add(this);
						this._Konu_ID = value.Konu_ID;
					}
					else
					{
						this._Konu_ID = default(short);
					}
					this.SendPropertyChanged("Konu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Test_Detays(Test_Detay entity)
		{
			this.SendPropertyChanging();
			entity.Soru = this;
		}
		
		private void detach_Test_Detays(Test_Detay entity)
		{
			this.SendPropertyChanging();
			entity.Soru = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Test")]
	public partial class Test : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Test_ID;
		
		private short _Kullanici_ID;
		
		private short _Ders_ID;
		
		private string _Test_Adi;
		
		private System.DateTime _Test_Tarihi;
		
		private EntitySet<Test_Detay> _Test_Detays;
		
		private EntityRef<Dersler> _Dersler;
		
		private EntityRef<Kullanici> _Kullanici;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTest_IDChanging(int value);
    partial void OnTest_IDChanged();
    partial void OnKullanici_IDChanging(short value);
    partial void OnKullanici_IDChanged();
    partial void OnDers_IDChanging(short value);
    partial void OnDers_IDChanged();
    partial void OnTest_AdiChanging(string value);
    partial void OnTest_AdiChanged();
    partial void OnTest_TarihiChanging(System.DateTime value);
    partial void OnTest_TarihiChanged();
    #endregion
		
		public Test()
		{
			this._Test_Detays = new EntitySet<Test_Detay>(new Action<Test_Detay>(this.attach_Test_Detays), new Action<Test_Detay>(this.detach_Test_Detays));
			this._Dersler = default(EntityRef<Dersler>);
			this._Kullanici = default(EntityRef<Kullanici>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Test_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Test_ID
		{
			get
			{
				return this._Test_ID;
			}
			set
			{
				if ((this._Test_ID != value))
				{
					this.OnTest_IDChanging(value);
					this.SendPropertyChanging();
					this._Test_ID = value;
					this.SendPropertyChanged("Test_ID");
					this.OnTest_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kullanici_ID", DbType="SmallInt NOT NULL")]
		public short Kullanici_ID
		{
			get
			{
				return this._Kullanici_ID;
			}
			set
			{
				if ((this._Kullanici_ID != value))
				{
					if (this._Kullanici.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKullanici_IDChanging(value);
					this.SendPropertyChanging();
					this._Kullanici_ID = value;
					this.SendPropertyChanged("Kullanici_ID");
					this.OnKullanici_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ders_ID", DbType="SmallInt NOT NULL")]
		public short Ders_ID
		{
			get
			{
				return this._Ders_ID;
			}
			set
			{
				if ((this._Ders_ID != value))
				{
					if (this._Dersler.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDers_IDChanging(value);
					this.SendPropertyChanging();
					this._Ders_ID = value;
					this.SendPropertyChanged("Ders_ID");
					this.OnDers_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Test_Adi", DbType="NVarChar(250)")]
		public string Test_Adi
		{
			get
			{
				return this._Test_Adi;
			}
			set
			{
				if ((this._Test_Adi != value))
				{
					this.OnTest_AdiChanging(value);
					this.SendPropertyChanging();
					this._Test_Adi = value;
					this.SendPropertyChanged("Test_Adi");
					this.OnTest_AdiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Test_Tarihi", DbType="DateTime NOT NULL", IsDbGenerated=true)]
		public System.DateTime Test_Tarihi
		{
			get
			{
				return this._Test_Tarihi;
			}
			set
			{
				if ((this._Test_Tarihi != value))
				{
					this.OnTest_TarihiChanging(value);
					this.SendPropertyChanging();
					this._Test_Tarihi = value;
					this.SendPropertyChanged("Test_Tarihi");
					this.OnTest_TarihiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Test_Test_Detay", Storage="_Test_Detays", ThisKey="Test_ID", OtherKey="Test_ID")]
		public EntitySet<Test_Detay> Test_Detays
		{
			get
			{
				return this._Test_Detays;
			}
			set
			{
				this._Test_Detays.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dersler_Test", Storage="_Dersler", ThisKey="Ders_ID", OtherKey="Ders_ID", IsForeignKey=true)]
		public Dersler Dersler
		{
			get
			{
				return this._Dersler.Entity;
			}
			set
			{
				Dersler previousValue = this._Dersler.Entity;
				if (((previousValue != value) 
							|| (this._Dersler.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Dersler.Entity = null;
						previousValue.Tests.Remove(this);
					}
					this._Dersler.Entity = value;
					if ((value != null))
					{
						value.Tests.Add(this);
						this._Ders_ID = value.Ders_ID;
					}
					else
					{
						this._Ders_ID = default(short);
					}
					this.SendPropertyChanged("Dersler");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kullanici_Test", Storage="_Kullanici", ThisKey="Kullanici_ID", OtherKey="Kullanici_ID", IsForeignKey=true)]
		public Kullanici Kullanici
		{
			get
			{
				return this._Kullanici.Entity;
			}
			set
			{
				Kullanici previousValue = this._Kullanici.Entity;
				if (((previousValue != value) 
							|| (this._Kullanici.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kullanici.Entity = null;
						previousValue.Tests.Remove(this);
					}
					this._Kullanici.Entity = value;
					if ((value != null))
					{
						value.Tests.Add(this);
						this._Kullanici_ID = value.Kullanici_ID;
					}
					else
					{
						this._Kullanici_ID = default(short);
					}
					this.SendPropertyChanged("Kullanici");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Test_Detays(Test_Detay entity)
		{
			this.SendPropertyChanging();
			entity.Test = this;
		}
		
		private void detach_Test_Detays(Test_Detay entity)
		{
			this.SendPropertyChanging();
			entity.Test = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Test_Detay")]
	public partial class Test_Detay : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Test_Detay_ID;
		
		private int _Test_ID;
		
		private short _Soru_ID;
		
		private short _Cevap_Secenek;
		
		private EntityRef<Soru> _Soru;
		
		private EntityRef<Test> _Test;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTest_Detay_IDChanging(long value);
    partial void OnTest_Detay_IDChanged();
    partial void OnTest_IDChanging(int value);
    partial void OnTest_IDChanged();
    partial void OnSoru_IDChanging(short value);
    partial void OnSoru_IDChanged();
    partial void OnCevap_SecenekChanging(short value);
    partial void OnCevap_SecenekChanged();
    #endregion
		
		public Test_Detay()
		{
			this._Soru = default(EntityRef<Soru>);
			this._Test = default(EntityRef<Test>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Test_Detay_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Test_Detay_ID
		{
			get
			{
				return this._Test_Detay_ID;
			}
			set
			{
				if ((this._Test_Detay_ID != value))
				{
					this.OnTest_Detay_IDChanging(value);
					this.SendPropertyChanging();
					this._Test_Detay_ID = value;
					this.SendPropertyChanged("Test_Detay_ID");
					this.OnTest_Detay_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Test_ID", DbType="Int NOT NULL")]
		public int Test_ID
		{
			get
			{
				return this._Test_ID;
			}
			set
			{
				if ((this._Test_ID != value))
				{
					if (this._Test.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTest_IDChanging(value);
					this.SendPropertyChanging();
					this._Test_ID = value;
					this.SendPropertyChanged("Test_ID");
					this.OnTest_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Soru_ID", DbType="SmallInt NOT NULL")]
		public short Soru_ID
		{
			get
			{
				return this._Soru_ID;
			}
			set
			{
				if ((this._Soru_ID != value))
				{
					if (this._Soru.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSoru_IDChanging(value);
					this.SendPropertyChanging();
					this._Soru_ID = value;
					this.SendPropertyChanged("Soru_ID");
					this.OnSoru_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cevap_Secenek", DbType="SmallInt NOT NULL")]
		public short Cevap_Secenek
		{
			get
			{
				return this._Cevap_Secenek;
			}
			set
			{
				if ((this._Cevap_Secenek != value))
				{
					this.OnCevap_SecenekChanging(value);
					this.SendPropertyChanging();
					this._Cevap_Secenek = value;
					this.SendPropertyChanged("Cevap_Secenek");
					this.OnCevap_SecenekChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Soru_Test_Detay", Storage="_Soru", ThisKey="Soru_ID", OtherKey="Soru_ID", IsForeignKey=true)]
		public Soru Soru
		{
			get
			{
				return this._Soru.Entity;
			}
			set
			{
				Soru previousValue = this._Soru.Entity;
				if (((previousValue != value) 
							|| (this._Soru.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Soru.Entity = null;
						previousValue.Test_Detays.Remove(this);
					}
					this._Soru.Entity = value;
					if ((value != null))
					{
						value.Test_Detays.Add(this);
						this._Soru_ID = value.Soru_ID;
					}
					else
					{
						this._Soru_ID = default(short);
					}
					this.SendPropertyChanged("Soru");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Test_Test_Detay", Storage="_Test", ThisKey="Test_ID", OtherKey="Test_ID", IsForeignKey=true)]
		public Test Test
		{
			get
			{
				return this._Test.Entity;
			}
			set
			{
				Test previousValue = this._Test.Entity;
				if (((previousValue != value) 
							|| (this._Test.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Test.Entity = null;
						previousValue.Test_Detays.Remove(this);
					}
					this._Test.Entity = value;
					if ((value != null))
					{
						value.Test_Detays.Add(this);
						this._Test_ID = value.Test_ID;
					}
					else
					{
						this._Test_ID = default(int);
					}
					this.SendPropertyChanged("Test");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
